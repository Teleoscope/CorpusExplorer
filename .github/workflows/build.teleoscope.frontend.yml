# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Test Rig for Teleoscope.ca 

on:
  push:
    branches: [ "frontend" ]
  pull_request:
    branches: [ "frontend" ]

defaults:
  run:
    working-directory: ./teleoscope.ca

jobs:
  cache-and-install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build Teleoscope.ca
        run: |
          echo "MONGODB_URI=${{secrets.MONGODB_ATLAS_TESTING_URI}}" >> ./.env.local
          echo "STRIPE_TEST_PUBLISHABLE_KEY=${{secrets.STRIPE_TEST_PUBLISHABLE_KEY}}" >> ./.env.local
          echo "STRIPE_TEST_SECRET_KEY=${{secrets.STRIPE_TEST_SECRET_KEY}}" >> ./.env.local
          echo "FRIGADE_API_PUBLIC=${{secrets.FRIGADE_API_PUBLIC}}" >> ./.env.local
          echo "LOOPS_API_KEY=${{secrets.LOOPS_API_KEY}}" >> ./.env.local
          pnpm run build

      - name: Trigger rebuild on server
        if: success()  # Only trigger if the build passes
        run: |
          curl -X POST https://${{secrets.FRONTEND_TEST_URL}}/api/webhook \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Event: push" \
            -d '{"ref": "refs/heads/frontend"}' \
            -H "X-Hub-Signature-256: $(echo -n "{\"ref\": \"refs/heads/frontend\"}" | openssl dgst -sha256 -hmac ${{ secrets.WEBHOOK_SECRET }})"